version: '3.8'

services:
  nginx:
    image: nginx:alpine
    container_name: inventory-jovanni-nginx-prod
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d/production.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - app_vendor:/var/www/vendor:ro
      - app_public:/var/www/public:ro
    depends_on:
      - app
    networks:
      - app-network

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: inventory-jovanni-app-prod
    restart: unless-stopped
    volumes:
      - ./storage:/var/www/storage
      - ./bootstrap/cache:/var/www/bootstrap/cache
      - image_uploads:/var/www/storage/app/public/photos
      - app_vendor:/var/www/vendor
      - app_public:/var/www/public
    environment:
      - APP_ENV=production
      - APP_DEBUG=true
      - APP_URL=http://localhost
      - APP_KEY=base64:xFOCHxqN1ALCeUH5ACAQgzO7y5VTky8rRI5x3t74z0w=
      - DB_CONNECTION=mysql
      - DB_HOST=db
      - DB_PORT=3306
      - DB_DATABASE=inventory_jovanni
      - DB_USERNAME=jovanni
      - DB_PASSWORD=secret
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CACHE_DRIVER=redis
      - SESSION_DRIVER=redis
      - QUEUE_CONNECTION=redis
      - DB_SEED=true
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - app-network

  db:
    image: mysql:8.0
    container_name: inventory-jovanni-db-prod
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: inventory_jovanni
      MYSQL_USER: jovanni
      MYSQL_PASSWORD: secret
      MYSQL_ROOT_PASSWORD: rootsecret
    volumes:
      - dbdata:/var/lib/mysql
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-prootsecret"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  redis:
    image: redis:7-alpine
    container_name: inventory-jovanni-redis-prod
    restart: unless-stopped
    volumes:
      - redisdata:/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: inventory-jovanni-phpmyadmin-prod
    restart: unless-stopped
    ports:
      - "8081:80"
    environment:
      PMA_HOST: db
      PMA_PORT: 3306
      PMA_USER: jovanni
      PMA_PASSWORD: secret
      MYSQL_ROOT_PASSWORD: rootsecret
    depends_on:
      - db
    networks:
      - app-network

volumes:
  dbdata:
    driver: local
  redisdata:
    driver: local
  image_uploads:
    driver: local
  app_public:
    driver: local
  app_vendor:
    driver: local

networks:
  app-network:
    driver: bridge
